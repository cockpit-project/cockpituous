#!/bin/sh

set -e

# If first argument starts with a path no loop
loop=yes
case ${1-} in
    /*)
        loop=no
        ;;
esac

# Set to verbose when looping
if [ $loop = "yes" ]; then
    set -x
fi

# Make sure directory is writable
sudo mkdir -p /cache/github /cache/images
sudo chown user:user /cache /cache/github /cache/images

if [ -n "$TMPDIR" ]; then
    mkdir -p "$TMPDIR"
    mkdir -p $TMPDIR/libvirt
    rm -rf /tmp/libvirt
    ln -snf $TMPDIR/libvirt /tmp/libvirt
fi

if [ ! -d cockpit ]; then
    sudo chown -R user /build
    git clone https://github.com/cockpit-project/cockpit
fi

# If interactive arguments then just exec
if [ $loop != "yes" ]; then
    cd cockpit/
    exec "$@"
fi

echo "Starting testing"

function task() {
    (
        # If the tasks file is executable, run it
        if [ -x cockpit/.tasks ]; then
            cd cockpit/ && ./.tasks

        # If it exists then cat it
        elif [ -e cockpit/.tasks ]; then
            cat cockpit/.tasks

        # No tasks found
        else
            echo "echo 'No tasks found in cockpit repo' >&2; exit 1"
        fi

    # Remove empty lines, comments, and reverse sort.
    # Then randomly pick one of the first 10 commands
    ) | sed -e 's/#.*$//' -e '/^$/d' | sort -r | head -n 10 | shuf | head -n 1
}

iteration=0
while true; do
    fail=0
    git -C cockpit fetch origin
    git -C cockpit reset --hard origin/master

    line="$(task)"
    if [ -n "$line" ]; then

        # Execute the task in question
        if /bin/sh -c "cd cockpit/; set -ex; $line"; then
            continue
        fi
    fi

    sleep 60
done

# Cockpit Integration Test

This is the deployment container and configuration for the Cockpit
integration tests. This documentation is for deployment on Fedora 22+
or RHEL 7+

This is for a single operating system. Choose the operating system to
test ahead of time.

## How to deploy

Make sure docker is installed and running:

    # yum -y install docker
    # systemctl enable docker
    # systemctl start docker

First get the container:

    # docker pull cockpit/infra-verify

Some bits need to be configured outside the container:

    # echo "options kvm-intel nested=1" > /etc/modprobe.d/kvm-intel.conf
    # echo "options kvm-amd nested=1" > /etc/modprobe.d/kvm-amd.conf
    # ( rmmod kvm-intel && modprobe kvm-intel ) || ( rmmod kvm-amd && modprobe kvm-amd )

Setup a 'cockpit' user:

    # groupadd -g 1111 -r cockpit && useradd -r -g cockpit -u 1111 cockpit
    # mkdir -p /home/cockpit/.ssh /home/cockpit/.config /home/cockpit/verify
    # chown -R cockpit:cockpit /home/cockpit

Fill in the following files with valid credentials able to post logs to sink and
update github status:

    /home/cockpit/.ssh/id_rsa
    /home/cockpit/.ssh/id_rsa.pub
    /home/cockpit/.config/github-token

Optionally you can add a local whitelist with github usernames whose pull requests are considered for testing.
Entries in this file are added to the in-tree cockpit/test/github-whitelist:

    /home/cockpit/.config/github-whitelist

For cockpituous, /home/cockpit/.ssh/config might look like this:

    Host fedorapeople.org
        IdentityFile ~/.ssh/id_rsa
        User cockpit

The verification will use git, which complains if not set up properly. Do this as the cockpit user:

    # git config --global user.email INSERT_EMAIL
    # git config --global user.name INSERT_NAME

Get the service file. Edit it before installing it. Set the TEST_OS.
Then install it and run it:

    # wget https://raw.githubusercontent.com/cockpit-project/cockpituous/master/verify/cockpit-verify.service
    # cp cockpit-verify.service /etc/systemd/system/
    # systemctl daemon-reload
    # systemctl enable cockpit-verify
    # systemctl start cockpit-verify

# Troubleshooting

Some helpful commands:

    # journalctl -fu cockpit-verify
    # systemctl stop cockpit-verify

# Updates

To update, just pull the new container and restart the cockpit-verify service.
It will restart automatically when it finds a pause in the verification work.

    # docker pull cockpit/infra-verify

#!/bin/bash -eu
#
# release-ubuntu-ppa
#
# HACK: This script is very Cockpit specific
#
# Depends on a source package built by release-debian.
#
# Arguments are described here. Most arguments have an equivalent envvar.
#
# -q         RELEASE_QUIET=1            Make output more quiet
# -x         RELEASE_TRANSACTION=1      SIGSTOP before pushing the dist-git commit
# -v         RELEASE_VERBOSE=1          Make output more verbose
# -z         RELEASE_CHECK=1            Check credentials only
#

set -eu

TRANSACTION=${RELEASE_TRANSACTION:-0}
CHECK=${RELEASE_CHECK:-0}
QUIET=${RELEASE_QUIET:-0}
VERBOSE=${RELEASE_VERBOSE:-0}
DSC="${RELEASE_DSC:-}"

usage()
{
    echo "usage: release-ubuntu-ppa [-qvxz] -p dsc" >&2
    exit ${1-2}
}

trace()
{
    if [ $QUIET -eq 0 ]; then
        echo "> $@" >&2
    fi
}

message()
{
    echo "release-ubuntu-ppa: $@" >&2
}

# Given a dsc path, figure out the version number it represents
#  $1: The dsc path
dsc_version()
{
    echo "$1" | sed -ne 's/.*_\([0-9.]\+\)-.*/\1/p'
}

check()
{
    sftp -b - cockpit-project@ppa.launchpad.net <<EOF
bye
EOF
}

prepare()
{
    true
}

commit()
(
    local dir

    trace "Publishing Ubuntu PPA"

    cd $(dirname $DSC)
    # upload files manually as there's no dput on fedora
    sftp -b - cockpit-project@ppa.launchpad.net <<EOF
put cockpit_${TAG}-0_source.changes ~cockpit-project/cockpit/ubuntu/xenial/cockpit_${TAG}-0_source.changes
put cockpit_${TAG}-0.dsc            ~cockpit-project/cockpit/ubuntu/xenial/cockpit_${TAG}-0.dsc
put cockpit_${TAG}-0.debian.tar.xz  ~cockpit-project/cockpit/ubuntu/xenial/cockpit_${TAG}-0.debian.tar.xz
put cockpit_${TAG}.orig.tar.xz      ~cockpit-project/cockpit/ubuntu/xenial/cockpit_${TAG}.orig.tar.xz
EOF
)

while getopts "p:qvxz" opt; do
    case "$opt" in
    p)
        DSC="$OPTARG"
        ;;
    q)
        QUIET=1
        VERBOSE=0
        ;;
    v)
        QUIET=0
        VERBOSE=1
        ;;
    x)
        TRANSACTION=1
        ;;
    z)
        CHECK=1
        ;;
    -)
        break
        ;;
    *)
        usage
        ;;
    esac
done

shift $(expr $OPTIND - 1)

if [ $# -ne 0 ]; then
    usage
fi

if [ $VERBOSE -eq 1 ]; then
    set -x
fi

if [ $CHECK -eq 1 ]; then
    check "$1"
    exit 0
fi

# The version number comes from dsc
DSC=$(realpath $DSC)
TAG=$(dsc_version $DSC)
if [ -z "$TAG" ]; then
    message "could not identify version number for debian source file: $DSC"
    exit 2
fi

prepare

if [ $TRANSACTION -eq 1 ]; then
    kill -STOP $$
fi

commit


#!/bin/sh -euf
#
# release-copr
#
# A script that takes an SRPM and builds it in COPR
#
# If the SRPM is a symlink it will be resolved to its actual file name.
# A properly configured ~/.config/copr is required.
#
# Arguments are described here. Most arguments have an equivalent envvar.
#
# -k         RELEASE_CONTINUE=1     Ignore build failure and skip the
#                                   branch without failing delivery.
# -p srpm    RELEASE_SRPM=srpm      Path to SRPM
# -q         RELEASE_QUIET=1        Make output more quiet
# -v         RELEASE_VERBOSE=1      Make output more verbose
#

set -euf

# Various arguments
TRANSACTION=${RELEASE_TRANSACTION:-0}
CHECK=${RELEASE_CHECK:-0}
QUIET=${RELEASE_QUIET:-0}
CONTINUE=${RELEASE_CONTINUE:-0}
VERBOSE=${RELEASE_VERBOSE:-0}
SRPM=${RELEASE_SRPM:-}
COPR=${RELEASE_COPR:-}

usage()
{
    echo "usage: release-copr [-qvxz] [-p SRPM] COPR" >&2
    exit ${1-2}
}

trace()
{
    if [ $QUIET -eq 0 ]; then
        echo "> $@" >&2
    fi
}

message()
{
    echo "release-copr: $@" >&2
}

readpath_or()
{
    if ! realpath "$1"; then
        echo "$1"
    fi
}

check_config() {
    local expiration

    trace "Validating ~/.config/copr"
    if [ ! -e ~/.config/copr ]; then
        message "~/.config/copr does not exist"
        exit 1
    fi
    expiration=$(sed -n '/# expiration/ { s/^.*:[[:space:]]*//; p }' ~/.config/copr)
    if [ -z "$expiration" ]; then
        message "~/.config/copr does not contain expiration date"
        exit 1
    fi
    if [ $(date +%s) -ge $(date -d"$expiration" +%s) ]; then
        message "~/.config/copr is expired, please renew"
        exit 1
    fi
}

check()
{
    check_config
    copr-cli list
    ssh fedorapeople.org -- mkdir -p public_html
}

prepare()
{
    local spec tmpfile tarball ret

    check_config
    SRPM="$(readpath_or $SRPM)"
}

commit()
(
    if ! copr-cli build $COPR "$SRPM"; then
        if [ $CONTINUE -eq 0 ]; then
            exit 1
        fi
    fi
)

while getopts "kp:qvxz" opt; do
    case "$opt" in
    k)
        CONTINUE=1
        ;;
    p)
        SRPM="$OPTARG"
        ;;
    q)
        QUIET=1
        VERBOSE=0
        ;;
    v)
        QUIET=0
        VERBOSE=1
        ;;
    x)
        TRANSACTION=1
        ;;
    z)
        CHECK=1
        ;;
    -)
        break
        ;;
    *)
        usage
        ;;
    esac
done

shift $(expr $OPTIND - 1)

if [ $# -ne 1 ]; then
    usage
fi

COPR="$1"

if [ $CHECK -eq 1 ]; then
    check
    exit 0
fi

if [ -z "$SRPM" ]; then
    message "no srpm specified"
    exit 2
elif [ ! -f "$SRPM" ]; then
    message "srpm source not found: $SRPM"
    exit 1
fi

prepare

if [ $TRANSACTION -eq 1 ]; then
    kill -STOP $$
fi

commit

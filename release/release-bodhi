#!/bin/sh -euf
#
# release-bodhi
#
# A script that does a Bodhi update request.
#
# Arguments are described here. Most arguments have an equivalent envvar.
#
# -p srpm    RELEASE_SRPM=srpm      Path to SRPM
# -q         RELEASE_QUIET=1        Make output more quiet
# -v         RELEASE_VERBOSE=1      Make output more verbose
#

set -euf

# Various arguments
TRANSACTION=${RELEASE_TRANSACTION:-0}
QUIET=${RELEASE_QUIET:-0}
VERBOSE=${RELEASE_VERBOSE:-0}
SRPM=${RELEASE_SRPM:-$PWD/srpm}
CHECK=${RELEASE_CHECK:-0}

# Other globals
USER=""
PASSWORD=""
FEDORA=""
USER=""
NVR=""

usage()
{
    echo "usage: release-bodhi [-qvxz] [-p SRPM] FEDORA" >&2
    exit ${1-2}
}

trace()
{
    if [ $QUIET -eq 0 ]; then
        echo "> $@" >&2
    fi
}

message()
{
    echo "release-bodhi: $@" >&2
}

check()
{
    USER="$(cat ~/.config/bodhi-user)"
    if [ -z "$USER" ]; then
        message "no valid ~/.config/bodhi-user found"
        exit 2
    fi

    PASSWORD="$(cat ~/.fedora-password)"
    if [ -z "$PASSWORD" ]; then
        message "no valid ~/.fedora-password found"
        exit 2
    fi
}

prepare()
{
    NVR="$(rpm --qf '%{Name}-%{Version}-%{Release}\n' -qp --undefine dist $SRPM)"
    if [ -z "$NVR" ]; then
        message "$SRPM: is not a valid source rpm"
        exit 1
    fi

    NOTES="$(rpm --changelog -qp $SRPM | sed -n '2,/^$/p')"
    if [ -z "$NOTES" ]; then
        message "$SRPM: doesn't have a valid changelog"
        exit 1
    fi
}

commit()
(
    local number fednvr
    if test "$FEDORA" != "${FEDORA%el*}" -o "$FEDORA" != "${FEDORA%*EL*}"; then
        number=$(echo $FEDORA | tr -d '[A-Z][a-z]')
        fednvr="${NVR/%fc*/el$number}"
    else
        number=$(echo $FEDORA | tr -d '[A-Z][a-z]')
        fednvr="${NVR/%fc*/fc$number}"
    fi

    echo "$PASSWORD" | setsid -w -- bodhi updates new --type=enhancement --close-bugs --notes="$NOTES" \
        --stable-karma=2 --unstable-karma=-1 --autokarma --request=stable --user $USER  \
        ${fednvr}
)

while getopts "p:qvxz" opt; do
    case "$opt" in
    p)
        SRPM="$OPTARG"
        ;;
    q)
        QUIET=1
        VERBOSE=0
        ;;
    v)
        QUIET=0
        VERBOSE=1
        ;;
    x)
        TRANSACTION=1
        ;;
    z)
        CHECK=1
        ;;
    -)
        break
        ;;
    *)
        usage
        ;;
    esac
done

shift $(expr $OPTIND - 1)

check

if [ $CHECK -eq 1 ]; then
    exit 0
fi

if [ $# -ne 1 ]; then
    usage
fi

FEDORA="$1"

if [ -z "$SRPM" ]; then
    message "no package specified"
    exit 2
fi

prepare

if [ $TRANSACTION -eq 1 ]; then
    kill -STOP $$
fi

commit

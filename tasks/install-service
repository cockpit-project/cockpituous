#!/bin/sh

# deploy changes to this script with:
# ansible -i inventory -m include_role -a name=tasks-systemd e2e
# ansible -i inventory -m include_role -a name=tasks-systemd tag_ServiceComponent_Tasks

set -eufx

SECRETS=/var/lib/cockpit-secrets
CACHE=/var/cache/cockpit-tasks
INSTANCES=${INSTANCES:-3}
# assume the host has plenty of RAM, use a tmpfs for /tmp for getting less IO contention; this can be overridden
TMPVOL=${TMPVOL:-"--tmpfs /tmp:size=14g"}

systemctl stop 'cockpit-tasks@*.service'

mkdir -p $SECRETS/tasks $SECRETS/webhook $CACHE
chown -R 1111:1111 $SECRETS $CACHE
chcon -R -t container_file_t $SECRETS $CACHE

cat <<EOF > /etc/systemd/system/cockpit-tasks@.service
[Unit]
Description=Cockpit Tasks %i

[Service]
Environment="TEST_JOBS=${TEST_JOBS:-8}"
Environment="TEST_CACHE=$CACHE"
Environment="TEST_SECRETS=$SECRETS"
Environment="TEST_PUBLISH=${TEST_PUBLISH:-sink}"
Environment="TEST_NOTIFICATION_MX=${TEST_NOTIFICATION_MX:-}"
Environment="TEST_NOTIFICATION_TO=${TEST_NOTIFICATION_TO:-}"
Environment="NPM_REGISTRY=${NPM_REGISTRY:-}"
Restart=always
RestartSec=60
# give image pull enough time
TimeoutStartSec=10min
ExecStartPre=-/usr/bin/podman rm -f cockpit-tasks-%i
ExecStartPre=/usr/bin/flock /tmp/cockpit-image-pull podman pull quay.io/cockpit/tasks
ExecStart=/usr/bin/podman run --name=cockpit-tasks-%i --hostname=%i-%l --device=/dev/kvm --net=slirp4netns --memory=24g --pids-limit=16384 --volume=npm-cache-%i:/work/.npm --volume=\${TEST_CACHE}/images:/cache/images:rw --volume=\${TEST_SECRETS}/tasks:/secrets:ro --volume=\${TEST_SECRETS}/webhook:/run/secrets/webhook:ro ${TMPVOL:-} --shm-size=1024m --user=1111 --env=NPM_REGISTRY=\${NPM_REGISTRY} --env=TEST_JOBS=\${TEST_JOBS} --env=TEST_PUBLISH=\${TEST_PUBLISH} --env=TEST_NOTIFICATION_MX=\${TEST_NOTIFICATION_MX} --env=TEST_NOTIFICATION_TO=\${TEST_NOTIFICATION_TO} quay.io/cockpit/tasks
ExecStop=/usr/bin/podman rm -f cockpit-tasks-%i

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload

for i in `seq $INSTANCES`; do systemctl enable --now cockpit-tasks@$i; done

#!/bin/sh

set -eux

setup-tasks

COCKPIT_BOTS_REPO=${COCKPIT_BOTS_REPO:-https://github.com/cockpit-project/bots}
COCKPIT_BOTS_BRANCH=${COCKPIT_BOTS_BRANCH:-main}

# let's just do our work in the current directory
WORKDIR="$PWD"
BOTS_DIR="$WORKDIR"/bots

echo "Starting testing"

function update_bots() {
    if [ -d "$BOTS_DIR" ]; then
        git -C "$BOTS_DIR" pull --rebase
    else
        git clone --quiet -b "$COCKPIT_BOTS_BRANCH" "$COCKPIT_BOTS_REPO" "$BOTS_DIR"
    fi
}

# wait between 1 and 10 minutes, but not in an interactive terminal (annoying for debugging)
function slumber() {
    if [ -t 0 ]; then
        sleep 10
    else
        sleep $(shuf -i ${1:-60-600} -n 1)
    fi
}

# on mass deployment, avoid GitHub stampede
slumber 0-120

# Consume from queue 30 times, then restart; listen to SIGTERM for orderly shutdown
shutdown=
trap "echo 'received SIGTERM, stopping main loop'; shutdown=1" TERM

for i in $(seq 1 30); do
    [ -z "$shutdown" ] || break
    update_bots
    cd "$BOTS_DIR"

    # avoid stale state and sockets
    virsh list --id --all | xargs --no-run-if-empty virsh destroy
    pkill -9 virtqemud || true
    while pgrep virtqemud >/dev/null; do sleep 0.5; done
    rm -rf ~/.config/libvirt ~/.cache/libvirt

    # run-queue fails on empty queues; don't poll too often
    timeout 12h ./run-queue ${AMQP_SERVER:+--amqp} ${AMQP_SERVER:-} || slumber
    # clean up after tests, in particular large qcow overlays
    rm -rf "${TEST_OVERLAY_DIR:-/var/tmp}"/* || true
    rm -rf /tmp/.cockpit-test-resources || true
done

# Prune old images
update_bots
./image-prune

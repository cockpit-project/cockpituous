server.modules = ( "mod_access", "mod_accesslog", "mod_alias", "mod_cgi", "mod_webdav", "mod_setenv" )
server.port = 8080
server.event-handler = "linux-sysepoll"
server.network-backend = "sendfile"
server.max-connections = 1024
server.max-request-size = 0

debug.log-request-header   = "enable"
debug.log-response-header  = "enable"
debug.log-request-handling = "enable"
debug.log-file-not-found   = "enable"

server.errorlog             = "/dev/stderr"
accesslog.filename          = "/dev/stderr"

server.document-root = "/cache"
server.upload-dirs = ( "/cache" )
setenv.set-environment = ( "TEST_DATA" => "/cache" )

cgi.execute-x-only          = "enable"
alias.url = ( "/predict" => "/learn/predict-tests" )
cgi.assign = ( "/learn/predict-tests" => "" )

mimetype.assign = (
	".txt" => "text/plain; charset=utf-8",
	".log" => "text/plain; charset=utf-8",
	".json" => "application/json",
	".jsonl" => "text/plain; charset=utf-8",
	".md" => "text/plain; charset=utf-8",
	".conf" => "text/plain; charset=utf-8",
	".html" => "text/html",
	".png" => "image/png",
	"README" => "text/plain; charset=utf-8",
	"status" => "text/plain; charset=utf-8",
	"log" => "text/plain; charset=utf-8",

	# enable caching for unknown mime types:
	"" => "application/octet-stream"
)

$HTTP["url"] =~ "^/train($|/)" {
    webdav.activate = "enable"
    webdav.is-readonly = "disable"
}

dir-listing.activate      = "enable"
dir-listing.exclude       = ( "~$" )
dir-listing.encoding      = "UTF-8"

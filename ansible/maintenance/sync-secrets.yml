# Sync secrets from the [master] host to all tasks runners, including OpenShift
# This uses `oc`, thus you must already be logged into OpenShift.
---
- hosts: e2e tag_ServiceName_FrontDoorCI
  gather_facts: false

  tasks:
  - name: Archive master secrets
    archive:
      path: /var/lib/cockpit-secrets/
      dest: /tmp/secrets.tar.gz
    when: inventory_hostname == groups.master[0]

  - name: Get master secrets
    slurp:
      src: /tmp/secrets.tar.gz
    register: secrets
    when: inventory_hostname == groups.master[0]

  - name: Clone cockpituous
    git:
      repo: https://github.com/cockpit-project/cockpituous/
      dest: /root/cockpituous
    when: inventory_hostname == groups.master[0]

  - name: Build tasks/webhook secrets YAML for Kubernetes
    command: /root/cockpituous/tasks/build-secrets
    register: build_tasks_secrets
    when: inventory_hostname == groups.master[0]

  - name: Register task/webhook secrets YAML as fact
    set_fact:
      tasks_secrets_yaml: "{{ build_tasks_secrets.stdout }}"
    when: inventory_hostname == groups.master[0]

  - name: Upload secrets
    copy:
      content: "{{ hostvars[groups.master[0]].secrets.content | b64decode }}"
      dest: /tmp/secrets.tar.gz
      mode: 0600
    when: inventory_hostname != groups.master[0]

  - name: Clean up old secrets directory
    file:
      path: /var/lib/cockpit-secrets
      state: absent
    when: inventory_hostname != groups.master[0]

  - name: Set up secrets dir
    file:
      path: /var/lib/cockpit-secrets
      owner: '1111'
      group: '1111'
      state: directory
      setype: container_file_t

  - name: Unarchive secrets
    unarchive:
      src: /tmp/secrets.tar.gz
      remote_src: true
      dest: /var/lib/cockpit-secrets/
      owner: '1111'
      group: '1111'
      setype: container_file_t
    when: inventory_hostname != groups.master[0]

  - name: Clean up secrets archive
    file:
      path: /tmp/secrets.tar.gz
      state: absent

- hosts: localhost
  gather_facts: false
  tasks:
    - name: Delete old CentOS CI OpenShift tasks secrets
      command:
        cmd: "{{ oc_command }} delete --ignore-not-found=true -f -"
        stdin: "{{ hostvars[groups.master[0]].tasks_secrets_yaml }}"

    - name: Create CentOS CI OpenShift tasks secrets
      command:
        cmd: "{{ oc_command }} create -f -"
        stdin: "{{ hostvars[groups.master[0]].tasks_secrets_yaml }}"

    - name: Restart CentOS CI OpenShift image pods to pick up changed certificates
      shell: "{{ oc_command }} get -o name -l infra=cockpit-images pods | xargs -l -r {{ oc_command }} delete --wait=false"
